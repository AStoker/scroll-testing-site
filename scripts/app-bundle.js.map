{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","_items","primaryItems","secondaryItems","query","_activeArray","i","push","items","chooseArrayA","chooseArrayB","getMore","console","log","filter","toLowerCase","indexOf","length","val","debug","testing","configure","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","config"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAEaA,cAAAA,cA4BV,oCAAa,OAAb,EAAsB,cAAtB;AA3BD,mBAAc;AAAA;;AACZ,WAAKC,MAAL,GAAc,EAAd;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,cAAL,GAAsB,EAAtB;AACA,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,YAAL,GAAoB,GAApB;;AAEA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,IAApB,EAA0BA,GAA1B,EAAgC;AAC9B,aAAKJ,YAAL,CAAkBK,IAAlB,cAAkCD,CAAlC;AACD;;AAED,WAAK,IAAIA,KAAI,CAAb,EAAgBA,KAAI,GAApB,EAAyBA,IAAzB,EAA+B;AAC7B,aAAKH,cAAL,CAAoBI,IAApB,cAAoCD,EAApC;AACD;;AAED,WAAKE,KAAL,GAAa,KAAKN,YAAlB;AACD;;kBAEDO,uCAAe;AACb,WAAKD,KAAL,GAAa,KAAKN,YAAlB;AACA,WAAKG,YAAL,GAAoB,GAApB;AACD;;kBACDK,uCAAe;AACb,WAAKF,KAAL,GAAa,KAAKL,cAAlB;AACA,WAAKE,YAAL,GAAoB,GAApB;AACD;;kBAYDM,6BAAU;AACRC,cAAQC,GAAR,CAAY,QAAZ;AACD;;;;0BAXW;AAAA;;AACV,eAAO,KAAKZ,MAAL,CAAYa,MAAZ,CAAmB,aAAK;AAC7B,iBAAOR,EAAES,WAAF,GAAgBC,OAAhB,CAAwB,MAAKZ,KAAL,CAAWW,WAAX,EAAxB,KAAqD,CAArD,IAA0D,MAAKX,KAAL,CAAWa,MAAX,KAAsB,CAAvF;AACD,SAFM,CAAP;AAGD;wBACSC,KAAK;AACb,aAAKjB,MAAL,GAAciB,GAAd;AACD;;;;;;;;;;;;oBCtCY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX,EAGGC,MAHH,CAGU,2BAHV;;AAKA,QAAI,sBAAYP,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYI,kBAAZ;AACD;;AAED,QAAI,sBAAYP,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACD;;AAEDJ,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCjBeT,YAAAA;AAAT,WAASA,SAAT,CAAmBU,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {computedFrom} from 'aurelia-framework';\n\nexport class App {\n  constructor() {\n    this._items = [];\n    this.primaryItems = [];\n    this.secondaryItems = [];\n    this.query = '';\n    this._activeArray = 'a'; //Just using this as a flag for testing changes\n\n    for (let i = 0; i < 1000; i++ ) {\n      this.primaryItems.push(`item a: ${i}`);\n    }\n\n    for (let i = 0; i < 100; i++ ) {\n      this.secondaryItems.push(`item b: ${i}`);\n    }\n\n    this.items = this.primaryItems;\n  }\n\n  chooseArrayA() {\n    this.items = this.primaryItems;\n    this._activeArray = 'a';\n  }\n  chooseArrayB() {\n    this.items = this.secondaryItems;\n    this._activeArray = 'b';\n  }\n\n  @computedFrom('query', '_activeArray')\n  get items() {\n    return this._items.filter(i => {\n      return i.toLowerCase().indexOf(this.query.toLowerCase()) >= 0 || this.query.length === 0;\n    });\n  }\n  set items(val) {\n    this._items = val;\n  }\n\n  getMore() {\n    console.log('called');\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-ui-virtualization'); // Add this line to load the plugin\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}